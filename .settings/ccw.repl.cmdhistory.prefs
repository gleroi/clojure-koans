cmdhistory=["(subvec [\:pea \:but \:and \:jel] 1 3)" "(reduce (fn [a b]\\r\\n                         (if (< a b) b a))\\r\\n                       [\\"which\\" \\"word\\" \\"is\\" \\"longest\\"])" "(reduce (fn [a b]\\r\\n                         (if (< (count a) (count b)) b a))\\r\\n                       [\\"which\\" \\"word\\" \\"is\\" \\"longest\\"])" "(meditations\\r\\n  \\"The map function relates a sequence to another\\"\\r\\n  (\= [4 8 12] (map (fn [x] (* 4 x)) [1 2 3]))\\r\\n\\r\\n  \\"You may create that mapping\\"\\r\\n  (\= [1 4 9 16 25] (map (fn [x] (* x x)) [1 2 3 4 5]))\\r\\n\\r\\n  \\"Or use the names of existing functions\\"\\r\\n  (\= [false false true false false] (map nil? [\:a \:b nil \:c \:d]))\\r\\n\\r\\n  \\"A filter can be strong\\"\\r\\n  (\= '() (filter (fn [x] false) '(\:anything \:goes \:here)))\\r\\n\\r\\n  \\"Or very weak\\"\\r\\n  (\= '(\:anything \:goes \:here) (filter (fn [x] true) '(\:anything \:goes \:here)))\\r\\n\\r\\n  \\"Or somewhere in between\\"\\r\\n  (\= [10 20 30] (filter (fn [x] (< x 31)) [10 20 30 40 50 60 70 80]))\\r\\n\\r\\n  \\"Maps and filters may be combined\\"\\r\\n  (\= [10 20 30] (map (fn [x] (* x 10)) (filter (fn [x] (< x 4)) [1 2 3 4 5 6 7 8])))\\r\\n\\r\\n  \\"Reducing can increase the result\\"\\r\\n  (\= 24 (reduce (fn [a b] (* a b)) [1 2 3 4]))\\r\\n\\r\\n  \\"You can start somewhere else\\"\\r\\n  (\= 2400 (reduce (fn [a b] (* a b)) 100 [1 2 3 4]))\\r\\n\\r\\n  \\"Numbers are not the only things one can reduce\\"\\r\\n  (\= \\"longest\\" (reduce (fn [a b]\\r\\n                         (if (< (count a) (count b)) b a))\\r\\n                       [\\"which\\" \\"word\\" \\"is\\" \\"longest\\"])))"]
eclipse.preferences.version=1
